#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("@aws-cdk/core");
const sample_infrastructure_stack_1 = require("./sample-infrastructure-stack");
const process = require("process");
const configurations = {
    ['dev']: {
        deployedEnvironment: 'dev',
        vpcId: 'vpc-1234567',
        env: {
            account: process.env.CDK_DEFAULT_ACCOUNT,
            region: process.env.CDK_DEFAULT_REGION,
        },
        account: 'us-east-2:1234567',
        notificationSqsArn: 'to-be-defined',
    },
    ['staging']: {
        deployedEnvironment: 'staging',
        vpcId: 'vpc-2345678',
        env: {
            account: process.env.CDK_DEFAULT_ACCOUNT,
            region: process.env.CDK_DEFAULT_REGION,
        },
        account: 'us-east-2:1234567',
        notificationSqsArn: 'to-be-defined',
    },
    ['prod']: {
        deployedEnvironment: 'prod',
        vpcId: 'vpc-3456789',
        env: {
            account: process.env.CDK_DEFAULT_ACCOUNT,
            region: process.env.CDK_DEFAULT_REGION,
        },
        account: 'us-east-2:1234567',
        notificationSqsArn: 'to-be-defined',
    },
};
const app = new cdk.App();
const buildEnvironment = (app.node.tryGetContext('env') || 'dev')
    .trim()
    .toLowerCase();
new sample_infrastructure_stack_1.SampleInfrastructureStack(app, 'SampleLambdaStack', configurations[buildEnvironment]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FtcGxlLmluZnJzdHJ1Y3R1cmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzYW1wbGUuaW5mcnN0cnVjdHVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSx1Q0FBcUM7QUFDckMscUNBQXNDO0FBRXRDLCtFQUEwRTtBQUUxRSxtQ0FBbUM7QUFFbkMsTUFBTSxjQUFjLEdBQXFDO0lBQ3ZELENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDUCxtQkFBbUIsRUFBRSxLQUFLO1FBQzFCLEtBQUssRUFBRSxhQUFhO1FBQ3BCLEdBQUcsRUFBRTtZQUNILE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQjtZQUN4QyxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0I7U0FDdkM7UUFDRCxPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLGtCQUFrQixFQUFFLGVBQWU7S0FDcEM7SUFDRCxDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQ1gsbUJBQW1CLEVBQUUsU0FBUztRQUM5QixLQUFLLEVBQUUsYUFBYTtRQUNwQixHQUFHLEVBQUU7WUFDSCxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUI7WUFDeEMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCO1NBQ3ZDO1FBQ0QsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixrQkFBa0IsRUFBRSxlQUFlO0tBQ3BDO0lBRUQsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNSLG1CQUFtQixFQUFFLE1BQU07UUFDM0IsS0FBSyxFQUFFLGFBQWE7UUFDcEIsR0FBRyxFQUFFO1lBQ0gsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CO1lBQ3hDLE1BQU0sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQjtTQUN2QztRQUNELE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsa0JBQWtCLEVBQUUsZUFBZTtLQUNwQztDQUNGLENBQUM7QUFFRixNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztBQUMxQixNQUFNLGdCQUFnQixHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxDQUFDO0tBQzlELElBQUksRUFBRTtLQUNOLFdBQVcsRUFBRSxDQUFDO0FBRWpCLElBQUksdURBQXlCLENBQzNCLEdBQUcsRUFDSCxtQkFBbUIsRUFDbkIsY0FBYyxDQUFDLGdCQUFnQixDQUFDLENBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIjIS91c3IvYmluL2VudiBub2RlXG5pbXBvcnQgJ3NvdXJjZS1tYXAtc3VwcG9ydC9yZWdpc3Rlcic7XG5pbXBvcnQgY2RrID0gcmVxdWlyZSgnQGF3cy1jZGsvY29yZScpO1xuXG5pbXBvcnQgeyBTYW1wbGVJbmZyYXN0cnVjdHVyZVN0YWNrIH0gZnJvbSAnLi9zYW1wbGUtaW5mcmFzdHJ1Y3R1cmUtc3RhY2snO1xuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiB9IGZyb20gJy4vY29uZmlndXJhdGlvbic7XG5pbXBvcnQgKiBhcyBwcm9jZXNzIGZyb20gJ3Byb2Nlc3MnO1xuXG5jb25zdCBjb25maWd1cmF0aW9uczogeyBba2V5OiBzdHJpbmddOiBDb25maWd1cmF0aW9uIH0gPSB7XG4gIFsnZGV2J106IHtcbiAgICBkZXBsb3llZEVudmlyb25tZW50OiAnZGV2JyxcbiAgICB2cGNJZDogJ3ZwYy0xMjM0NTY3JyxcbiAgICBlbnY6IHtcbiAgICAgIGFjY291bnQ6IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX0FDQ09VTlQsXG4gICAgICByZWdpb246IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX1JFR0lPTixcbiAgICB9LFxuICAgIGFjY291bnQ6ICd1cy1lYXN0LTI6MTIzNDU2NycsXG4gICAgbm90aWZpY2F0aW9uU3FzQXJuOiAndG8tYmUtZGVmaW5lZCcsXG4gIH0sXG4gIFsnc3RhZ2luZyddOiB7XG4gICAgZGVwbG95ZWRFbnZpcm9ubWVudDogJ3N0YWdpbmcnLFxuICAgIHZwY0lkOiAndnBjLTIzNDU2NzgnLFxuICAgIGVudjoge1xuICAgICAgYWNjb3VudDogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfQUNDT1VOVCxcbiAgICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuQ0RLX0RFRkFVTFRfUkVHSU9OLFxuICAgIH0sXG4gICAgYWNjb3VudDogJ3VzLWVhc3QtMjoxMjM0NTY3JyxcbiAgICBub3RpZmljYXRpb25TcXNBcm46ICd0by1iZS1kZWZpbmVkJyxcbiAgfSxcblxuICBbJ3Byb2QnXToge1xuICAgIGRlcGxveWVkRW52aXJvbm1lbnQ6ICdwcm9kJyxcbiAgICB2cGNJZDogJ3ZwYy0zNDU2Nzg5JyxcbiAgICBlbnY6IHtcbiAgICAgIGFjY291bnQ6IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX0FDQ09VTlQsXG4gICAgICByZWdpb246IHByb2Nlc3MuZW52LkNES19ERUZBVUxUX1JFR0lPTixcbiAgICB9LFxuICAgIGFjY291bnQ6ICd1cy1lYXN0LTI6MTIzNDU2NycsXG4gICAgbm90aWZpY2F0aW9uU3FzQXJuOiAndG8tYmUtZGVmaW5lZCcsXG4gIH0sXG59O1xuXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuY29uc3QgYnVpbGRFbnZpcm9ubWVudCA9IChhcHAubm9kZS50cnlHZXRDb250ZXh0KCdlbnYnKSB8fCAnZGV2JylcbiAgLnRyaW0oKVxuICAudG9Mb3dlckNhc2UoKTtcblxubmV3IFNhbXBsZUluZnJhc3RydWN0dXJlU3RhY2soXG4gIGFwcCxcbiAgJ1NhbXBsZUxhbWJkYVN0YWNrJyxcbiAgY29uZmlndXJhdGlvbnNbYnVpbGRFbnZpcm9ubWVudF0sXG4pO1xuIl19